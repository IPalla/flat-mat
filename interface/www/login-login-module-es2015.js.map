{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kN;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAT3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;ACzB5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;ACAb;AACR;AACS;AACQ;AAO3D,IAAa,SAAS,GAAtB,MAAa,SAAS;IAGpB,YAAoB,MAAiB,EAAU,QAAkB,EACxD,iBAAoC;QADzB,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAU;QACxD,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE5C,QAAQ;;YACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAEpC,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACjD,OAAO,EAAE,gBAAgB;aAC1B,CAAC,CAAC;QACL,CAAC;KAAA;IAGK,cAAc,CAAC,OAAO;;YAC1B,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC;KAAA;IAEK,KAAK;;YACT,IAAI,MAAM,CAAC;YACX,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;gBAC/B,MAAM,GAAG;oBACP,aAAa,EAAE,0EAA0E;oBACzF,SAAS,EAAE,IAAI;iBAChB;aACF;iBACI;gBACH,MAAM,GAAG,EAAE;aACZ;YACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;iBACtB,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,GAAG,QAAQ;gBACzC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;YAC5C,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;gBACjB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;gBAClB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC;KAAA;IACD,cAAc,CAAC,WAAW,EAAE,YAAY;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEzB,CAAC;IACD,YAAY,CAAC,GAAG;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;CAEF;;YA/C4B,wEAAU;YAAoB,uDAAQ;YACrC,gEAAiB;;AAJlC,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;;KAEjC,CAAC;2EAI2B,wEAAU,EAAoB,uDAAQ;QACrC,gEAAiB;GAJlC,SAAS,CAkDrB;AAlDqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login-page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-button (click)=\\\"login()\\\"> HOLA </ion-button>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loading: any;\n  constructor(private google:GooglePlus, private platform: Platform,\n    public loadingController: LoadingController) { }\n\n  async ngOnInit() {\n    console.log(window.cordova.plugins);\n    \n    this.loading = await this.loadingController.create({\n      message: 'Connecting ...'\n    });\n  }\n\n\n  async presentLoading(loading) {\n    await loading.present();\n  }\n\n  async login() {\n    let params;\n    if (this.platform.is('android')) {\n      params = {\n        'webClientId': '266429742545-9tvej5149gs8qrb07avvl3793ej3eqft.apps.googleusercontent.com',\n        'offline': true\n      }\n    }\n    else {\n      params = {}\n    }\n    this.google.login(params)\n      .then((response) => {\n        console.log(response);\n        const { idToken, accessToken } = response\n        this.onLoginSuccess(idToken, accessToken);\n      }).catch((error) => {\n        console.log(error)\n        alert('error:' + JSON.stringify(error))\n      });\n  }\n  onLoginSuccess(accessToken, accessSecret) {\n    console.log('accesToken', accessToken);\n    console.log('accesSecret', accessSecret);\n    console.log('Success');\n\n  }\n  onLoginError(err) {\n    console.log(err);\n  }\n\n}\n"],"sourceRoot":""}