{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,kN;;;;;;;;;;;;;;;;;;;;;;ACAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;ACAb;AACR;AACS;AACQ;AAO3D;IAGE,mBAAoB,MAAiB,EAAU,QAAkB,EACxD,iBAAoC;QADzB,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAU;QACxD,sBAAiB,GAAjB,iBAAiB,CAAmB;IAAI,CAAC;IAE5C,4BAAQ,GAAd;;;;;;wBACE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;wBAEpC,SAAI;wBAAW,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gCACjD,OAAO,EAAE,gBAAgB;6BAC1B,CAAC;;wBAFF,GAAK,OAAO,GAAG,SAEb,CAAC;;;;;KACJ;IAGK,kCAAc,GAApB,UAAqB,OAAO;;;;4BAC1B,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;;;;;KACzB;IAEK,yBAAK,GAAX;;;;;gBAEE,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE;oBAC/B,MAAM,GAAG;wBACP,aAAa,EAAE,0EAA0E;wBACzF,SAAS,EAAE,IAAI;qBAChB;iBACF;qBACI;oBACH,MAAM,GAAG,EAAE;iBACZ;gBACD,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC;qBACtB,IAAI,CAAC,UAAC,QAAQ;oBACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACd,8BAAO,EAAE,kCAAW,CAAa;oBACzC,KAAI,CAAC,cAAc,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC,KAAK,CAAC,UAAC,KAAK;oBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;oBAClB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBACzC,CAAC,CAAC,CAAC;;;;KACN;IACD,kCAAc,GAAd,UAAe,WAAW,EAAE,YAAY;QACtC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAEzB,CAAC;IACD,gCAAY,GAAZ,UAAa,GAAG;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;;gBA7C0B,wEAAU;gBAAoB,uDAAQ;gBACrC,gEAAiB;;IAJlC,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uIAAgC;;SAEjC,CAAC;+EAI2B,wEAAU,EAAoB,uDAAQ;YACrC,gEAAiB;OAJlC,SAAS,CAkDrB;IAAD,gBAAC;CAAA;AAlDqB","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>login-page</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n<ion-button (click)=\\\"login()\\\"> HOLA </ion-button>\\n\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Platform } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { GooglePlus } from '@ionic-native/google-plus/ngx';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loading: any;\n  constructor(private google:GooglePlus, private platform: Platform,\n    public loadingController: LoadingController) { }\n\n  async ngOnInit() {\n    console.log(window.cordova.plugins);\n    \n    this.loading = await this.loadingController.create({\n      message: 'Connecting ...'\n    });\n  }\n\n\n  async presentLoading(loading) {\n    await loading.present();\n  }\n\n  async login() {\n    let params;\n    if (this.platform.is('android')) {\n      params = {\n        'webClientId': '266429742545-9tvej5149gs8qrb07avvl3793ej3eqft.apps.googleusercontent.com',\n        'offline': true\n      }\n    }\n    else {\n      params = {}\n    }\n    this.google.login(params)\n      .then((response) => {\n        console.log(response);\n        const { idToken, accessToken } = response\n        this.onLoginSuccess(idToken, accessToken);\n      }).catch((error) => {\n        console.log(error)\n        alert('error:' + JSON.stringify(error))\n      });\n  }\n  onLoginSuccess(accessToken, accessSecret) {\n    console.log('accesToken', accessToken);\n    console.log('accesSecret', accessSecret);\n    console.log('Success');\n\n  }\n  onLoginError(err) {\n    console.log(err);\n  }\n\n}\n"],"sourceRoot":""}